#!/bin/bash


#Student - Kyle Kraft Project 1.3:NMAP Script
#The purpose of this script is to run NMAP against a specific range of IPs while making use of the "While" and "IF" features.
#NMAP will scan a list of addresses that it is given to see what addresses are currently in use as well as other
# useful information that could be used to identify devices.

#The first two lines define the variables that will be called out in the script. They are set to zero to start with.
x=0
y=0


#This while section will prompt users to enter 1 to define our starting IP for NMAP.  An IF statement is used to 
# help make sure that the user understands what is expected of them.  This section will continue to run until
# x has reached a value of 1 as defined by the user. 


#This says, so long as X is not 1, run this section of code.
while [ $x  !=  1 ]

#The command DO defines what will occure when the WHILE condition is met.  	
do

	echo "We will do an NMAP for 10.140.1.1 to 10.  Please enter enter our starting octet of 1."
	#This READ will prompt the user to enter information for the variable X.
	read x

#This IF statement will check the X variable to see if X is our desired value.  If it is, it thanks the user and moves one.  If it 
# does not then it will ask the user to try again.
if [ $x = 1 ]; then
	echo "Thank you!"
	else 
	echo "Please try again. Please enter 1."
	fi

done

#Sleep tells the system to wait two seconds to make the transition less jarring for humans. 
sleep  2
echo "Now please enter the ending address."

#Here the same steps that were done for X are repeated for Y but this time Y's value should be 10. 
while [ $y != 10 ]
do 

	echo "Please enter our ending octet of 10."
	read y

	if [ $y = 10 ]; then
	echo "Thank you.  Please wait for NMAP to finish.  The results will be displayed shortly."
	else
	echo "Please try again. Please enter 10."
	fi

done

#Once X and Y have been set to 1 and 10, NMAP is run with these once per value between 1 and 10 with the -A option that will make this scan
# AGGRESSIVE and will return what OS, version information and other detailed information.

#Because the assignment calls for NMAP to be ran once per IP instead of using a range, a WHILE section will be used to incriment the value of X 
# until it is greater (-ge) than Y. 
while [ $y -ge $x ]
do

	#NMAP is ran with the value of X as its last octet.  Once it has run, X will be incrimented by 1 and the command will run again.
	# This process will run until X is greater than Y. The results of this command will be concatenated into a file called Project1-3Results.txt.  
	nmap -A 10.140.1.$x >> Project1-3-Results.txt
	x=$(($x+1))
done 

echo "You can find the NMAP results in Project1-3-Results.txt otherwise please wait 5 seconds for the results to be automatically displayed."
sleep 5
cat Project1-3-Results.txt

